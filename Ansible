#!/bin/bash

# Define variables
TARGET_FILE="/etc/sssd/sssd.conf"
NEW_LINE="ipa_server = _srv_, pln-petipareplica.ipa.calix.local, cpeg-ipareplica.ipa.calix.local"

# Ensure script runs as root
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root or with sudo." >&2
    exit 1
fi

# Function to check if ipa_server line needs updating
update_sssd_conf() {
    if grep -q '^ipa_server =' "$TARGET_FILE"; then
        sed -i "s|^ipa_server =.*|$NEW_LINE|" "$TARGET_FILE"
        echo "Updated ipa_server entry in $TARGET_FILE"
        return 0
    else
        echo "$NEW_LINE" >> "$TARGET_FILE"
        echo "Added ipa_server entry to $TARGET_FILE"
        return 0
    fi
}

# Function to restart SSSD
restart_sssd() {
    systemctl restart sssd
    if [[ $? -eq 0 ]]; then
        echo "SSSD restarted successfully."
    else
        echo "Failed to restart SSSD." >&2
        exit 1
    fi
}

# Execute functions
update_sssd_conf && restart_sssd

echo "SSSD configuration update complete."
exit 0


SERVERS=("10.168.0.58" "10.168.0.59" "10.168.0.60")  # Add more IPs as needed

for SERVER in "${SERVERS[@]}"; do
    scp update_sssd.sh deploy@$SERVER:/tmp/update_sssd.sh
    ssh deploy@$SERVER "sudo bash /tmp/update_sssd.sh"
done

