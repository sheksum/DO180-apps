#!/usr/bin/env bash
# Usage: SSH_KEY=~/.ssh/deploy_key ./check-patch-status.sh hosts.txt
# Generates both console output and CSV report (patch-status-report.csv)

set -euo pipefail

HOSTS_FILE="${1:-}"
[ -f "$HOSTS_FILE" ] || { echo "Usage: $0 <hosts_file>"; exit 1; }

REPORT_FILE="patch-status-report.csv"

SSH_OPTS="-n -o BatchMode=yes -o ConnectTimeout=10 -o StrictHostKeyChecking=no"
[ -n "${SSH_KEY:-}" ] && SSH_OPTS="$SSH_OPTS -i $SSH_KEY"

USER="${USER:-deploy}"

patched=0
needs_reboot=0
needs_updates=0
unreachable=0

# CSV Header
echo "Host,Status,Details" > "$REPORT_FILE"

printf "%-35s  %-14s  %s\n" "HOST" "STATUS" "DETAILS"
printf "%-35s  %-14s  %s\n" "----" "------" "-------"

while IFS= read -r host || [[ -n "$host" ]]; do
  host="${host%%$'\r'*}"          # strip CR if file has Windows line endings
  [ -z "$host" ] && continue
  [[ "$host" =~ ^# ]] && continue

  out=$(
    ssh $SSH_OPTS "$USER@$host" '
      set -e
      upd=$(sudo apt-get -s -o Debug::NoLocking=1 upgrade 2>/dev/null | awk "/^Inst /{n++} END{print n+0}")
      if [ -z "$upd" ]; then
        upd=$(sudo sh -c "apt list --upgradable 2>/dev/null" | awk "NR>1{n++} END{print n+0}")
      fi
      [ -f /var/run/reboot-required ] && rb=1 || rb=0
      echo "$upd $rb"
    ' 2>/dev/null
  ) || true

  if [[ -z "$out" ]]; then
    printf "%-35s  %-14s  %s\n" "$host" "UNREACHABLE" "-"
    echo "$host,UNREACHABLE,-" >> "$REPORT_FILE"
    unreachable=$((unreachable+1))
    continue
  fi

  updates=$(awk '{print $1}' <<<"$out")
  reboot=$(awk '{print $2}' <<<"$out")

  if [[ "$reboot" == "1" ]]; then
    printf "%-35s  %-14s  %s\n" "$host" "NEEDS_REBOOT" "reboot-required"
    echo "$host,NEEDS_REBOOT,reboot-required" >> "$REPORT_FILE"
    needs_reboot=$((needs_reboot+1))
  elif [[ "$updates" -gt 0 ]]; then
    printf "%-35s  %-14s  %s\n" "$host" "NEEDS_UPDATES" "$updates pkgs"
    echo "$host,NEEDS_UPDATES,${updates} pkgs" >> "$REPORT_FILE"
    needs_updates=$((needs_updates+1))
  else
    printf "%-35s  %-14s  %s\n" "$host" "PATCHED" "0 pkgs"
    echo "$host,PATCHED,0 pkgs" >> "$REPORT_FILE"
    patched=$((patched+1))
  fi
done < "$HOSTS_FILE"

total=$((patched + needs_reboot + needs_updates + unreachable))
echo
echo "SUMMARY: total=$total  patched=$patched  needs_reboot=$needs_reboot  needs_updates=$needs_updates  unreachable=$unreachable"
echo "CSV report written to: $REPORT_FILE"
