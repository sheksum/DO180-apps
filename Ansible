[defaults]
# === Core settings ===
inventory              = ./inventory.ini
remote_user            = deploy
host_key_checking      = False
retry_files_enabled    = False
deprecation_warnings   = False
force_color            = True
stdout_callback        = yaml

# === Python and tmp fixes ===
interpreter_python     = auto_silent         # Suppress Python version warnings
remote_tmp             = /tmp/.ansible-${USER}  # Avoid home-dir permission issues

# === Performance tuning ===
forks                  = 50                  # Run up to 50 hosts in parallel
strategy               = free                # Don't wait for slower hosts
timeout                = 300                 # 5-minute SSH connect timeout
pipelining             = True                # Speeds up privilege escalation
gathering              = smart               # Cache and reuse facts efficiently
fact_caching           = memory
fact_caching_timeout   = 7200

# === Logging (optional) ===
# log_path              = /var/log/ansible/ansible.log

[ssh_connection]
# Reuse SSH sessions for speed and reliability
ssh_args = -o ControlMaster=auto \
           -o ControlPersist=300s \
           -o ServerAliveInterval=30 \
           -o ServerAliveCountMax=5

pipelining = True
retries = 3
=====

---
- name: Patch Ubuntu systems
  hosts: ubuntu
  become: true
  gather_facts: true
  serial: 25

  vars:
    apt_lock_files:
      - /var/lib/apt/lists/lock
      - /var/cache/apt/archives/lock
      - /var/lib/dpkg/lock
      - /var/lib/dpkg/lock-frontend

  pre_tasks:
    - name: Remove any apt/dpkg lock files
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ apt_lock_files }}"
      failed_when: false

    - name: Clean apt cache
      command: apt-get clean
      args:
        warn: false

    - name: Update apt package index
      command: apt-get update -y
      args:
        warn: false

  tasks:
    - name: Apply all available package updates (full-upgrade)
      command: apt-get dist-upgrade -y
      args:
        warn: false

    - name: Autoremove and autoclean old packages
      command: apt-get autoremove -y && apt-get autoclean -y
      args:
        warn: false

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Display reboot requirement
      debug:
        msg: "Reboot required on {{ inventory_hostname }}"
      when: reboot_required.stat.exists

