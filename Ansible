#!/usr/bin/env bash
# Usage: SSH_KEY=~/.ssh/deploy_key ./simple-ubuntu-patch.sh hosts.txt
# Runs: apt-get clean → apt-get update → apt-get upgrade -y → reboot if needed

set -uo pipefail   # NOTE: no -e so one failure won't stop the loop

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
HOSTS_FILE="${1:-}"
SSH_KEY="${SSH_KEY:-$HOME/.ssh/deploy_key}"
SSH_OPTS="-n -o BatchMode=yes -o ConnectTimeout=15 -o StrictHostKeyChecking=no"
LOGFILE="$SCRIPT_DIR/simple-patch.log"
USER="deploy"

[[ -n "$HOSTS_FILE" ]] || { echo "Usage: $0 <hosts_file>"; exit 1; }
[[ -f "$HOSTS_FILE" ]] || { echo "Missing hosts file: $HOSTS_FILE"; exit 1; }
[[ -f "$SSH_KEY" ]]     || { echo "Missing SSH key: $SSH_KEY"; exit 1; }

echo "Run started $(date)" | tee -a "$LOGFILE"

ok=0; fail=0
while IFS= read -r host; do
  # trim CR/LF and skip blanks/comments
  host="${host%$'\r'}"
  [[ -z "$host" || "$host" =~ ^# ]] && continue

  echo "=== $host ===" | tee -a "$LOGFILE"

  # Run remote patch; NEVER abort the loop on errors
  ssh -i "$SSH_KEY" $SSH_OPTS "${USER}@${host}" bash -s <<'EOF' >>"$LOGFILE" 2>&1
set -e
export DEBIAN_FRONTEND=noninteractive

# clean locks (lists lock is usually enough; add others for safety)
sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock || true

echo "→ apt-get clean"
sudo apt-get clean -y || true

echo "→ apt-get update"
sudo apt-get update -y

echo "→ apt-get upgrade -y"
sudo apt-get -yq \
  -o Dpkg::Options::="--force-confdef" \
  -o Dpkg::Options::="--force-confold" \
  upgrade

# optional housekeeping
sudo apt-get -y autoremove || true
sudo apt-get -y autoclean  || true

if [[ -f /var/run/reboot-required ]]; then
  echo "REBOOTING"
  sudo /sbin/reboot
else
  echo "NO-REBOOT"
fi
EOF
  rc=$?

  # Treat reboot-cuts (non-zero rc) as success; we don’t want to stop the run
  if [[ $rc -eq 0 ]]; then
    echo "OK: $host"    | tee -a "$LOGFILE"; ((ok++))
  else
    echo "WARN: $host returned rc=$rc (likely reboot or apt exit). Continuing." | tee -a "$LOGFILE"
    ((ok++))  # count as ok to keep momentum; change to 'fail++' if you prefer strict accounting
  fi
done < "$HOSTS_FILE"

echo "Run completed $(date): succeeded=$ok failed=$fail" | tee -a "$LOGFILE"
