#!/bin/bash

# List of clusters
clusters=("kqde1-gen1" "kqde1-gen2" "kva1-gen1" "kde1-gen1" "kva3-gen1")

# Loop through each cluster
for cluster in "${clusters[@]}"; do
    echo "Checking IP pools in cluster: $cluster"
    
    # Set the context for the current cluster
    kubectl config use-context "$cluster"
    
    # Retrieve the list of all namespaces in the cluster
    current_namespaces=$(kubectl get namespaces -o jsonpath='{.items[*].metadata.name}')
    
    # Retrieve the list of all IP pools (e.g., from Calico or your CNI)
    # Adjust this for your CNI, here it's assumed you're using Calico
    allocated_ips=$(calicoctl get ippool -o json | jq -r '.items[].metadata.name')
    
    # Loop through each IP pool
    for ip_pool in $allocated_ips; do
        # Check if the IP pool corresponds to an existing namespace
        if echo "$current_namespaces" | grep -q "$ip_pool"; then
            # IP pool is in use, as the namespace exists
            continue # Skip the IP pool if it is in use (do not print anything)
        else
            # IP pool is unused, as the namespace no longer exists
            echo "IP pool '$ip_pool' is unused and should be cleaned up."
        fi
    done
done
