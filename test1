---
- name: Dynamically enroll RHEL systems to Red Hat Satellite
  hosts: all
  become: true
  vars_files:
    - group_vars/all.yml

  tasks:

    - name: Gather facts
      ansible.builtin.setup:

    - name: Ensure hammer CLI is installed on the control node
      delegate_to: localhost
      become: true
      ansible.builtin.package:
        name: tfm-rubygem-hammer_cli
        state: present

    - name: Fetch available host groups from Satellite
      delegate_to: localhost
      become: false
      ansible.builtin.shell: |
        hammer --no-headers hostgroup list --organization "{{ org }}" --location "{{ location }}" --fields Name,Title
      register: hostgroup_list_raw

    - name: Fail if no host groups were returned
      delegate_to: localhost
      ansible.builtin.fail:
        msg: "No host groups found. Check Satellite access or hammer CLI authentication."
      when: hostgroup_list_raw.stdout == ""

    - name: Set parsed hostgroup list
      delegate_to: localhost
      set_fact:
        parsed_hostgroups: "{{ hostgroup_list_raw.stdout_lines }}"

    - name: Show available host groups
      debug:
        msg: "Available Host Groups:\n{{ parsed_hostgroups | join('\n') }}"

    - name: Prompt for activation key for RHEL 8
      delegate_to: localhost
      ansible.builtin.pause:
        prompt: "Enter activation key for RHEL 8 systems:"
      register: ak8_input

    - name: Save RHEL 8 activation key
      set_fact:
        rhel8_activation_key: "{{ ak8_input.user_input }}"

    - name: Prompt for activation key for RHEL 9
      delegate_to: localhost
      ansible.builtin.pause:
        prompt: "Enter activation key for RHEL 9 systems:"
      register: ak9_input

    - name: Save RHEL 9 activation key
      set_fact:
        rhel9_activation_key: "{{ ak9_input.user_input }}"

    - name: Prompt for host group number
      delegate_to: localhost
      ansible.builtin.pause:
        prompt: "Enter the number of the host group to use (1-{{ parsed_hostgroups | length }}):"
      register: hg_index

    - name: Set selected host group
      set_fact:
        selected_hostgroup: "{{ parsed_hostgroups[(hg_index.user_input | int) - 1].split('|')[1] | trim }}"

    - name: Set activation key based on OS
      set_fact:
        selected_activation_key: >-
          {% if ansible_distribution_major_version == '8' %}
            {{ rhel8_activation_key }}
          {% elif ansible_distribution_major_version == '9' %}
            {{ rhel9_activation_key }}
          {% else %}
            unsupported
          {% endif %}

    - name: Fail if unsupported OS
      ansible.builtin.fail:
        msg: "Unsupported OS version: {{ ansible_distribution_major_version }}"
      when: selected_activation_key == "unsupported"

    - name: Install Katello CA
      ansible.builtin.yum:
        name: "https://{{ satellite_fqdn }}/pub/katello-ca-consumer-latest.noarch.rpm"
        state: present

    - name: Download bootstrap.py script
      ansible.builtin.get_url:
        url: "https://{{ satellite_fqdn }}/pub/bootstrap.py"
        dest: /tmp/bootstrap.py
        mode: '0755'
        validate_certs: false

    - name: Register system to Satellite using bootstrap
      ansible.builtin.shell: >
        /usr/bin/python3 /tmp/bootstrap.py
        --server {{ satellite_fqdn }}
        --organization "{{ org }}"
        --location "{{ location }}"
        --activationkey "{{ selected_activation_key }}"
        --hostgroup "{{ selected_hostgroup }}"
        --user {{ satellite_user }}
        --password {{ satellite_password }}
        --force --insecure
