#!/bin/bash

###############################################################################
# check-calico-peering.sh
#
# This script checks BGP peering status on all Calico nodes in the cluster.
# It runs 'birdcl show protocols' inside each calico-node pod and logs the
# output to a file for later review.
#
# Output:
# - BGP protocol details per pod
# - Results are saved in /tmp with a timestamped filename
#
# How to use:
#   chmod +x check-calico-peering.sh
#   ./check-calico-peering.sh
###############################################################################

NAMESPACE="calico-system"
LABEL="k8s-app=calico-node"
CONTAINER="calico-node"
CMD="birdcl show protocols"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
LOG_FILE="/tmp/calico_bgp_peering_${TIMESTAMP}.log"

YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No color

echo -e "${YELLOW}[INFO] Checking Calico BGP peering protocols on all nodes...${NC}"
echo -e "${YELLOW}[INFO] Logs will be saved to: $LOG_FILE${NC}\n"

pods=$(kubectl get pods -n "$NAMESPACE" -l "$LABEL" -o jsonpat='{.items[*].metadata.name}')

{
  echo "[INFO] Calico BGP Peering Check - $TIMESTAMP"
  echo "---------------------------------------------"

  for pod in $pods; do
    echo -e "\n======================================"
    echo ">>> Pod: $pod"
    echo "======================================"

    if ! kubectl exec -it "$pod" -n "$NAMESPACE" -c "$CONTAINER" -- $CMD; then
      echo "[WARN] $pod: Failed to exec or run birdcl"
    fi
  done

  echo -e "\n[INFO] Check finished at $(date)"
} | tee "$LOG_FILE"

echo -e "\n${GREEN}[DONE] Calico BGP peering check complete.${NC}"
echo -e "${YELLOW}To view the full output, run: cat $LOG_FILE${NC}"
