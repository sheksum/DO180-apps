import requests

# Function to fetch NetBox prefixes and filter by 'use' field (namespace of the application)
def get_netbox_ip_pools():
    """Fetch the IP pools from NetBox based on 'use' (namespace) field."""
    try:
        url = "https://netbox.yourcompany.com/api/ipam/prefixes/"
        headers = {"Authorization": "Token YOUR_NETBOX_TOKEN"}  # Replace with your NetBox token
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            data = response.json()
            # Create a dictionary with 'use' as the key and 'prefix' (namespace) as the value
            netbox_data = {
                item["use"]: item["prefix"]
                for item in data["results"]
                if "use" in item  # Ensure the 'use' field exists
            }
            return netbox_data
        else:
            print(f"Error fetching data from NetBox: {response.status_code}")
            return {}
    except requests.exceptions.RequestException as e:
        print(f"Error while retrieving data from NetBox: {e}")
        return {}

# Function to print the header for the output table
def print_header():
    """Print the header for the table."""
    print(f"\n{'Namespace (Use)':<40} {'IP Pools (Blocks)':<40}")
    print(f"{'-'*40} {'-'*40}")

# Main function to check and print IP pools based on the NetBox data
def print_netcool_ip_pools():
    """Fetch and print IP pools associated with each namespace from NetBox."""
    # Fetch IP pool data from NetBox
    netbox_data = get_netbox_ip_pools()

    if not netbox_data:
        print("No namespaces found in NetBox. Exiting.")
        return

    # Print table header
    print_header()

    # Loop through and print the associated namespaces and IP pools
    for app_namespace, prefix in netbox_data.items():
        print(f"{app_namespace:<40} {prefix:<40}")

# Run the function to print IP pools for namespaces
print_netcool_ip_pools()
