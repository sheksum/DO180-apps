#!/bin/bash

HOSTS_FILE="hosts.txt"
SSH_USER="deploy"
LOGFILE="verify_failures.log"

CERTS=("CalixROOTCA.crt" "CalixInterCA1.crt" "CalixInterCA2.crt")
DEBIAN_DIR="/usr/local/share/ca-certificates"
RHEL_DIR="/etc/pki/ca-trust/source/anchors"
TEST_URL="https://pln-stash.calix.local"

SSH_OPTS=(-o BatchMode=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR -o ConnectTimeout=5)

ts(){ date +'%F %T'; }
log_fail(){ echo "$(ts) $1" >> "$LOGFILE"; }

: > "$LOGFILE"

while IFS= read -r host; do
  [[ -z "$host" || "$host" =~ ^# ]] && continue

  echo ">>> $host"
  missing=0; https_ok=0

  # detect OS family
  OS_LINE=$(ssh "${SSH_OPTS[@]}" "$SSH_USER@$host" 'source /etc/os-release 2>/dev/null; echo "${ID_LIKE:-$ID}"' 2>/dev/null)
  if [[ $? -ne 0 || -z "$OS_LINE" ]]; then
    log_fail "$host - SSH/OS-detect failed"
    echo "$host FAIL (ssh/os-detect)"
    continue
  fi

  if [[ "$OS_LINE" == *debian* || "$OS_LINE" == *ubuntu* ]]; then
    ca_dir="$DEBIAN_DIR"
  else
    ca_dir="$RHEL_DIR"
  fi

  # check certs
  for c in "${CERTS[@]}"; do
    ssh "${SSH_OPTS[@]}" "$SSH_USER@$host" "[ -f '$ca_dir/$c' ]" 2>/dev/null
    if [[ $? -ne 0 ]]; then
      ((missing++))
      log_fail "$host - missing $ca_dir/$c"
    fi
  done

  # curl trust check
  ssh "${SSH_OPTS[@]}" "$SSH_USER@$host" "curl -sS -I --max-time 5 '$TEST_URL' >/dev/null 2>&1"
  if [[ $? -eq 0 ]]; then
    https_ok=1
  else
    log_fail "$host - HTTPS trust failed"
  fi

  if (( missing==0 && https_ok==1 )); then
    echo "$host OK (dir: $ca_dir)"
  else
    echo "$host FAIL (dir: $ca_dir, missing:$missing, https:$([[ $https_ok == 1 ]] && echo OK || echo FAIL))"
  fi
done < "$HOSTS_FILE"

echo "Failures logged to $LOGFILE"
