---
- name: Configure Dell iDRAC
  hosts: idrac_hosts
  gather_facts: no
  become: no
  vars_files:
    - group_vars/all.yml

  tasks:
    - name: Ensure required Python modules are installed
      pip:
        name:
          - requests
          - urllib3
      delegate_to: localhost
      run_once: true

    - name: Upload iDRAC firmware via Redfish API
      uri:
        url: "https://{{ idrac_ip }}/redfish/v1/UpdateService"
        method: POST
        user: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        validate_certs: no
        body_format: json
        body:
          ImageURI: "files/{{ idrac_firmware_image }}"
      register: firmware_update

    - name: Display iDRAC firmware update result
      debug:
        msg: "iDRAC Firmware Update Status: {{ firmware_update }}"

    - name: Upload BIOS firmware via Redfish API (if applicable)
      when: bios_image | length > 0
      uri:
        url: "https://{{ idrac_ip }}/redfish/v1/UpdateService"
        method: POST
        user: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        validate_certs: no
        body_format: json
        body:
          ImageURI: "files/{{ bios_image }}"
      register: bios_update

    - name: Display BIOS update result
      when: bios_image | length > 0
      debug:
        msg: "BIOS Firmware Update Status: {{ bios_update }}"

    - name: Upload PERC firmware via Redfish API
      uri:
        url: "https://{{ idrac_ip }}/redfish/v1/UpdateService"
        method: POST
        user: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        validate_certs: no
        body_format: json
        body:
          ImageURI: "files/{{ perc_firmware_image }}"
      register: perc_update

    - name: Display PERC firmware update result
      debug:
        msg: "PERC Firmware Update Status: {{ perc_update }}"

    - name: Reboot system after firmware updates
      dellemc.openmanage.idrac_boot:
        baseuri: "{{ idrac_ip }}"
        username: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        command: "Reboot"
      when: firmware_update.changed or bios_update.changed or perc_update.changed
      register: reboot_status

    - name: Display reboot status
      debug:
        msg: "System Reboot Status: {{ reboot_status }}"

    - name: Wait for system to come back online
      wait_for:
        host: "{{ idrac_ip }}"
        port: 443
        delay: 60
        timeout: 1800  # Increased to 30 minutes for physical servers
        state: started
      register: wait_result

    - name: Display wait result
      debug:
        msg: "System Availability Status: {{ wait_result }}"

    - name: Create an iDRAC user with full privileges
      dellemc.openmanage.idrac_user:
        baseuri: "{{ idrac_ip }}"
        username: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        new_username: "{{ idrac_user }}"
        new_password: "{{ idrac_user_password }}"
        role: "Administrator"
      register: user_config

    - name: Display user creation result
      debug:
        msg: "User Creation Status: {{ user_config }}"

    - name: Rename the system
      dellemc.openmanage.idrac_attributes:
        baseuri: "{{ idrac_ip }}"
        username: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        attributes:
          System.HostName: "{{ system_name }}"
      register: rename_result

    - name: Display system rename result
      debug:
        msg: "System Rename Status: {{ rename_result }}"

    - name: Create RAID 1 array using Storage Volume Module
      dellemc.openmanage.idrac_storage_volume:
        baseuri: "{{ idrac_ip }}"
        username: "{{ idrac_username }}"
        password: "{{ idrac_password }}"
        raid_level: "{{ raid_type }}"
        physical_disks: "{{ physical_disks }}"
      register: raid_config

    - name: Display RAID configuration result
      debug:
        msg: "RAID Configuration Status: {{ raid_config }}"
