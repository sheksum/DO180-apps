---
- name: Push Calix CA chain and refresh trust
  hosts: dev_workstations            # adjust your inventory group
  become: yes

  vars:
    cert_source_dir: /tmp/certs      # on the Ansible CONTROLLER (plnx-admin)
    dest_dir_deb: /usr/local/share/ca-certificates
    dest_dir_rhel: /etc/pki/ca-trust/source/anchors
    test_url: "https://tabnine.calix.local/"

  pre_tasks:
    - name: Gather OS facts early
      ansible.builtin.setup:
        gather_subset: [min]

    - name: Ensure curl is present
      ansible.builtin.package:
        name: curl
        state: present

    - name: Compute destination directory based on OS family
      ansible.builtin.set_fact:
        cert_dest_dir: "{{ dest_dir_deb if ansible_os_family == 'Debian' else dest_dir_rhel }}"

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ cert_dest_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0755"

  tasks:
    - name: Find existing cert files in destination
      ansible.builtin.find:
        paths: "{{ cert_dest_dir }}"
        file_type: file
        patterns:
          - "*.crt"
          - "*.pem"
      register: existing_cert_files

    - name: Remove non-IPA cert files from destination
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ existing_cert_files.files }}"
      when:
        - item.path is not regex('\/ipa-ca(\/|$)')     # keep ipa-ca dir content
        - item.path is not search('/ipa\\.p11-kit$')   # keep ipa.p11-kit
        - (item.path | basename) is not regex('^ipa')  # keep any IPA* files
      notify: update trust store

    - name: Copy Calix certs from controller to target
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ cert_dest_dir }}/"
        owner: root
        group: root
        mode: "0644"
      with_fileglob:
        - "{{ cert_source_dir }}/*.{crt,pem}"
      notify: update trust store

  handlers:
    - name: update trust store
      ansible.builtin.block:
        - name: Update trust on Debian/Ubuntu
          ansible.builtin.command: update-ca-certificates -f
          when: ansible_os_family == 'Debian'
          changed_when: true

        - name: Update trust on RHEL/CentOS
          ansible.builtin.command: update-ca-trust extract
          when: ansible_os_family == 'RedHat'
          changed_when: true

    - name: validate
      ansible.builtin.block:
        - name: Validate HTTPS to {{ test_url }}
          ansible.builtin.command: curl -sS --fail -I "{{ test_url }}"
          register: curl_head
          changed_when: false
          failed_when: curl_head.rc != 0
        - name: Show response headers
          ansible.builtin.debug:
            var: curl_head.stdout_lines
