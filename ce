#!/bin/bash
# Push *.crt to CentOS/RHEL7 anchors and run update-ca-trust
# Tries root login first; if blocked, falls back to deploy+sudo

set -u -o pipefail

HOSTS_FILE="${HOSTS_FILE:-centos7.txt}"      
CERTS_DIR="${CERTS_DIR:-./files}"           
LOGFILE="${LOGFILE:-push_certs_failures.log}"
DEPLOY_USER="${DEPLOY_USER:-deploy}"        # fallback user with sudo
DEPLOY_KEY="${DEPLOY_KEY:-$HOME/.ssh/deploy_key}"

SSH_OPTS=(-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          -o LogLevel=ERROR -o ConnectTimeout=6 -o ConnectionAttempts=1)

# read root pw once
read -s -p "Root password: " ROOTPW; echo

: > "$LOGFILE"

shopt -s nullglob
CRT_LIST=("$CERTS_DIR"/*.crt)
shopt -u nullglob
if (( ${#CRT_LIST[@]} == 0 )); then
  echo "No .crt files found in $CERTS_DIR"; exit 1
fi

ok=0 fail=0

mapfile -t HOSTS < <(tr -d '\r' < "$HOSTS_FILE" | sed -e '/^\s*#/d' -e '/^\s*$/d')

echo "Processing ${#HOSTS[@]} hosts..."
for host in "${HOSTS[@]}"; do
  echo ">>> $host"
  host_fail=0

  # ---- ROOT path
  if sshpass -p "$ROOTPW" ssh "${SSH_OPTS[@]}" "root@${host}" true >/dev/null 2>&1; then
    echo "  Using root login"
    COPY_CMD="sshpass -p $ROOTPW scp ${SSH_OPTS[*]}"
    RUN_CMD="sshpass -p $ROOTPW ssh ${SSH_OPTS[*]} root@${host}"
    TARGET_USER="root"
    SUDO_PREFIX=""   # not needed as root
  else
    # ---- FALLBACK to deploy user
    echo "  Root login blocked, using $DEPLOY_USER + sudo"
    COPY_CMD="scp -i $DEPLOY_KEY ${SSH_OPTS[*]}"
    RUN_CMD="ssh -i $DEPLOY_KEY ${SSH_OPTS[*]} $DEPLOY_USER@${host}"
    TARGET_USER="$DEPLOY_USER"
    SUDO_PREFIX="sudo -n"
  fi

  # copy + install certs
  for crt in "${CRT_LIST[@]}"; do
    base="$(basename "$crt")"
    if $COPY_CMD "$crt" "${TARGET_USER}@${host}:/tmp/$base" >/dev/null 2>&1; then
      if $RUN_CMD "$SUDO_PREFIX mv /tmp/$base /etc/pki/ca-trust/source/anchors/$base && $SUDO_PREFIX chmod 644 /etc/pki/ca-trust/source/anchors/$base"; then
        echo "  OK: pushed $base"
      else
        echo "  FAIL: move/perm $base"; echo "$(date +'%F %T') $host - move/perm failed $base" >> "$LOGFILE"; host_fail=1
      fi
    else
      echo "  FAIL: scp $base"; echo "$(date +'%F %T') $host - scp failed $base" >> "$LOGFILE"; host_fail=1
    fi
  done

  # refresh trust
  if $RUN_CMD "$SUDO_PREFIX update-ca-trust extract" >/dev/null 2>&1; then
    echo "  OK: trust updated"
  else
    echo "  FAIL: update-ca-trust"; echo "$(date +'%F %T') $host - update-ca-trust failed" >> "$LOGFILE"; host_fail=1
  fi

  if (( host_fail == 0 )); then
    echo "$host  OK"; ((ok++))
  else
    echo "$host  FAIL"; ((fail++))
  fi
done

echo
echo "SUMMARY  OK=$ok  FAIL=$fail"
echo "Failures logged to $LOGFILE"
