#!/bin/bash
# hosts.txt = list of servers (one per line)

HOSTS_FILE="hosts.txt"
SSH_USER="deploy"

DEBIAN_DIR="/usr/local/share/ca-certificates"
RHEL_DIR="/etc/pki/ca-trust/source/anchors"
CERTS=("CalixROOTCA.crt" "CalixInterCA1.crt" "CalixInterCA2.crt")

TEST_URL="https://pln-stash.calix.local"
LOGFILE="verify_failures.log"

# --- timeouts (seconds) ---
SSH_CONNECT_TO=6      # TCP connect timeout
SSH_CMD_TO=10         # cap each ssh command
CURL_MAX_TIME=6       # cap curl on the remote host

# --- quiet, non-interactive SSH ---
SSH_OPTS="-o BatchMode=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR -o ConnectTimeout=${SSH_CONNECT_TO} -o ConnectionAttempts=1 -o ServerAliveInterval=3 -o ServerAliveCountMax=1"

: > "$LOGFILE"  # truncate log file

for host in $(cat "$HOSTS_FILE"); do
  echo ">>> $host"

  # detect OS family (bounded)
  OS=$(timeout "$SSH_CMD_TO" ssh $SSH_OPTS "$SSH_USER@$host" \
       'source /etc/os-release 2>/dev/null; echo "${ID_LIKE:-$ID}"' 2>/dev/null)

  if [[ -z "$OS" ]]; then
    echo "  FAIL: ssh/os-detect timeout or failure"
    echo "$(date +'%F %T') $host - ssh/os-detect timeout or failure" >> "$LOGFILE"
    continue
  fi

  if [[ "$OS" == *"debian"* || "$OS" == *"ubuntu"* ]]; then
    CA_DIR="$DEBIAN_DIR"
  else
    CA_DIR="$RHEL_DIR"
  fi

  # check certs (bounded)
  for c in "${CERTS[@]}"; do
    if timeout "$SSH_CMD_TO" ssh $SSH_OPTS "$SSH_USER@$host" "[ -f '$CA_DIR/$c' ]"; then
      echo "  OK:      $CA_DIR/$c"
    else
      echo "  MISSING: $CA_DIR/$c"
      echo "$(date +'%F %T') $host - missing $CA_DIR/$c" >> "$LOGFILE"
    fi
  done

  # quick HTTPS probe (bounded)
  if timeout "$SSH_CMD_TO" ssh $SSH_OPTS "$SSH_USER@$host" \
       "curl -sS -I --max-time ${CURL_MAX_TIME} '$TEST_URL' >/dev/null 2>&1"; then
    echo "  HTTPS OK"
  else
    echo "  HTTPS FAIL"
    echo "$(date +'%F %T') $host - HTTPS trust failed for $TEST_URL" >> "$LOGFILE"
  fi
done

echo
echo "Failures logged to $LOGFILE"
