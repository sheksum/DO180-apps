- hosts: localhost
  gather_facts: no
  vars:
    my_cidr: "10.168.0.0/22"   # <-- change as needed
    ssh_timeout: 1             # seconds for quick port-22 probe
  tasks:
    - name: Expand CIDR to list of IPs using Python stdlib
      command:
        argv:
          - python3
          - -c
          - |
            import ipaddress, json, sys
            net = ipaddress.ip_network(sys.argv[1], strict=False)
            print(json.dumps([str(ip) for ip in net.hosts()]))
          - "{{ my_cidr }}"
      register: cidr_out
      changed_when: false

    - name: Set fact with IP list
      set_fact:
        cidr_hosts: "{{ cidr_out.stdout | from_json }}"

    - name: Probe SSH (22) quickly
      wait_for:
        host: "{{ item }}"
        port: 22
        timeout: "{{ ssh_timeout }}"
      loop: "{{ cidr_hosts }}"
      register: sshcheck
      ignore_errors: yes
      failed_when: false        # don't show red failures for timeouts

    - name: Build list of live hosts
      set_fact:
        live_hosts: "{{ sshcheck.results | selectattr('failed', '==', false) | map(attribute='item') | list }}"

    - name: Show live hosts
      debug:
        var: live_hosts

    - name: Stop early if none are reachable
      meta: end_play
      when: live_hosts | length == 0

    - name: Add live hosts dynamically
      add_host:
        name: "{{ item }}"
        groups: cidr_targets
        ansible_user: deploy
        ansible_ssh_common_args: "-o ConnectTimeout=3"
      loop: "{{ live_hosts }}"

- hosts: cidr_targets
  gather_facts: no
  tasks:
    - name: Ping reachable hosts
      ping:
